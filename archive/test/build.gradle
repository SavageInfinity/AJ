version '1.0.0'

buildscript {
	repositories {
	    maven {
	      url "https://plugins.gradle.org/m2/"
	    }
	}
	dependencies {
		
		classpath 'org.postgresql:postgresql:9.4.1208.jre6'
		
		classpath ("gradle.plugin.net.foragerr.jmeter:jmeter-gradle-plugin:1.0.3-2.13") {
			exclude group: 'xml-apis' 
		}
		classpath 'xml-apis:xml-apis:1.4.01'
	}
}

apply plugin: 'net.foragerr.jmeter'

jmeter {
	excludes = ["*.jmx"];
	resultFilenameTimestamp = "none";
	jmTestFiles = [];
	project.gradle.startParameter.taskNames.each { name ->
		if (name.startsWith("jmRun_")) {
			File f = file("src/test/jmeter/" + (name - "jmRun_") + ".jmx");
			if (f.exists()) jmTestFiles.add(f);
		}
	}
	// jMeter testide parameetrid
	jmUserProperties = [
		// Fail tuleb anda jmeter.workDir suhtes, see on vaikimisi "build/jmeter"
		"jmeter.save.saveservice.url=true",
		"xpath.namespace.config=../../src/test/jmeter/jmeter.namespaces",
		"testakUrl=http://aj04.ci.kit:8080/testak/soap",
		"filterUrl=http://aj02.ci.kit:8080/dumonitor-filter/testak",
		"dbUrl=jdbc:postgresql://aj03.ci.kit/dumonitor",
		"dbUser=dumonitor_app",
		"dbPassword=aj22p",
		"storageHost=aj03.ci.kit",
		"storagePort=8080",
		"storageStorePath=/dumonitor-storage/store",
		"storageQueryPath=/dumonitor-storage/query",
		"storageXroadQueryPath=/dumonitor-storage/xroad",
		// Load test parameters:
		"parallelRequests=50",
		"rampUpPeriod=10",
		"loopCount=10",
		// Mitu kirjet logi p√§ringu koormustestiga loetakse:
		"logRecordCount=10"
	]
	enableExtendedReports = true //produce Graphical and CSV reports
}

tasks.addRule("Pattern: jmRun_<filename>") {
	String taskName ->
	if (taskName.startsWith("jmRun_")) {
		task (taskName, type: net.foragerr.jmeter.gradle.plugins.TaskJMRun, dependsOn: ['copyPostgreLib','jmInit']) << {
		}
	}
}

task copyPostgreLib(type: Copy) {
	from(buildscript.configurations.classpath) {
   		include '**/postgresql*.jar'
   	}
   into 'build/jmeter/lib'
}
